package com.warm.greendaodemo.dao.gen;

import com.warm.greendaodemo.dao.entity.JoinStudentWithSubject;
import com.warm.greendaodemo.dao.entity.Score;
import com.warm.greendaodemo.dao.entity.Student;
import com.warm.greendaodemo.dao.entity.Subject;
import com.warm.greendaodemo.dao.entity.Teacher;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig joinStudentWithSubjectDaoConfig;
    private final DaoConfig scoreDaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig subjectDaoConfig;
    private final DaoConfig teacherDaoConfig;

    private final JoinStudentWithSubjectDao joinStudentWithSubjectDao;
    private final ScoreDao scoreDao;
    private final StudentDao studentDao;
    private final SubjectDao subjectDao;
    private final TeacherDao teacherDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        joinStudentWithSubjectDaoConfig = daoConfigMap.get(JoinStudentWithSubjectDao.class).clone();
        joinStudentWithSubjectDaoConfig.initIdentityScope(type);

        scoreDaoConfig = daoConfigMap.get(ScoreDao.class).clone();
        scoreDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        subjectDaoConfig = daoConfigMap.get(SubjectDao.class).clone();
        subjectDaoConfig.initIdentityScope(type);

        teacherDaoConfig = daoConfigMap.get(TeacherDao.class).clone();
        teacherDaoConfig.initIdentityScope(type);

        joinStudentWithSubjectDao = new JoinStudentWithSubjectDao(joinStudentWithSubjectDaoConfig, this);
        scoreDao = new ScoreDao(scoreDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        subjectDao = new SubjectDao(subjectDaoConfig, this);
        teacherDao = new TeacherDao(teacherDaoConfig, this);

        registerDao(JoinStudentWithSubject.class, joinStudentWithSubjectDao);
        registerDao(Score.class, scoreDao);
        registerDao(Student.class, studentDao);
        registerDao(Subject.class, subjectDao);
        registerDao(Teacher.class, teacherDao);
    }
    
    public void clear() {
        joinStudentWithSubjectDaoConfig.clearIdentityScope();
        scoreDaoConfig.clearIdentityScope();
        studentDaoConfig.clearIdentityScope();
        subjectDaoConfig.clearIdentityScope();
        teacherDaoConfig.clearIdentityScope();
    }

    public JoinStudentWithSubjectDao getJoinStudentWithSubjectDao() {
        return joinStudentWithSubjectDao;
    }

    public ScoreDao getScoreDao() {
        return scoreDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public SubjectDao getSubjectDao() {
        return subjectDao;
    }

    public TeacherDao getTeacherDao() {
        return teacherDao;
    }

}
